{"version":3,"sources":["n6-features/f3-authorization/Authorization.module.css","n6-features/f1-news/News.module.css","n7-helpers/fake_axios.ts","n3-api/auth-api.ts","n7-helpers/cookie.ts","n6-features/f3-authorization/auth_reducer.ts","n1-app/a1-app/app_reducer.ts","n2-bll/store/store.ts","n6-features/f1-news/News.tsx","n6-features/f3-authorization/Authorization.tsx","n1-app/a2-routes/Routes.tsx","n1-app/a1-app/App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","_BaseURL","_baseResponse","status","headers","request","config","fake_db","userName","userId","email","password","generatedTokenFromServer","_axios","url","payload","Promise","res","rej","setTimeout","data","token","resultCode","message","randomDelay","min","max","Math","floor","random","authAPI","then","set_cookie","name","value","cookie_string","escape","document","cookie","delete_cookie","cookie_name","cookie_date","Date","setTime","getTime","toUTCString","get_cookie","results","match","unescape","login","createAsyncThunk","thunkAPI","a","dispatch","setIsFetching","isFetching","rejectWithValue","logout","slice","createSlice","initialState","isAuth","reducers","setIsAuth","state","action","extraReducers","builder","addCase","fulfilled","rejected","alert","actions","authReducer","reducer","initializeApp","isAppInitialized","appReducer","rootReducer","combineReducers","auth","app","store","configureStore","useAppDispatch","useDispatch","useAppSelector","useSelector","News","className","s","wrapper","btn","onClick","to","PATH","AUTHORIZATION","Authorization","formik","useFormik","initialValues","onSubmit","values","NEWS","handleSubmit","formItem","placeholder","type","onChange","handleChange","NOT_FOUND","Routes","exact","path","render","App","useEffect","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5129f695.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Authorization_wrapper__1e9Yd\",\"formItem\":\"Authorization_formItem__1ctss\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"News_wrapper__HiQYN\",\"btn\":\"News_btn__rM9y2\"};","export const _BaseURL = 'https://test1-soc-net/'\r\nconst _baseResponse = {\r\n    status: 200,\r\n    headers: {},\r\n    request: {},\r\n    config: {}\r\n}\r\n\r\nconst fake_db = {\r\n    '#4545777666': {\r\n        userName: 'Sergio',\r\n        userId: '#4545777666',\r\n        email: 'test@mail.good',\r\n        password: 'test999'\r\n    }\r\n}\r\n\r\nconst generatedTokenFromServer = 'aaaaaaa.bbbbbbb.ccccccc'\r\n\r\nexport const _axios = {\r\n    post(url: string, payload: any) {\r\n        return new Promise((res, rej) => {\r\n            setTimeout(() => {\r\n                switch (url) {\r\n                    case _BaseURL + 'auth/login':\r\n                        if (payload.email === fake_db['#4545777666'].email && payload.password === fake_db['#4545777666'].password) {\r\n                            res({\r\n                                ..._baseResponse, data: {\r\n                                    token: generatedTokenFromServer,\r\n                                    userName: fake_db['#4545777666'].userName,\r\n                                    userId: fake_db['#4545777666'].userId,\r\n                                    resultCode: 0\r\n                                },\r\n                            })\r\n                        } else rej({message: 'Check email or password', resultCode: 1})\r\n                        break\r\n                    case _BaseURL + 'auth/me':\r\n                        if(payload.token === generatedTokenFromServer) {\r\n                            res({..._baseResponse, data: {\r\n                                    userName: fake_db['#4545777666'].userName,\r\n                                    userId: fake_db['#4545777666'].userId,\r\n                                    resultCode: 0\r\n                                }})\r\n                        }\r\n                        break\r\n                    default:\r\n                        rej({message: 'Error: check if URL is correct', resultCode: 1})\r\n                }\r\n            }, randomDelay(500, 1500))\r\n        })\r\n    },\r\n    delete(url: string) {\r\n        return new Promise((res, rej) => {\r\n            setTimeout(() => {\r\n                switch (url) {\r\n                    case _BaseURL + 'auth/me':\r\n                        res({\r\n                            ..._baseResponse, data: {\r\n                                resultCode: 0\r\n                            },\r\n                        })\r\n                        break\r\n                    default:\r\n                        rej({message: 'Error: check if URL is correct', resultCode: 1})\r\n                }\r\n            }, randomDelay(500, 1500))\r\n        })\r\n    }\r\n}\r\n\r\nconst randomDelay = (min: number, max: number) => {\r\n    return Math.floor(Math.random() * (max - min + 1) + min)\r\n}","import {_axios, _BaseURL} from '../n7-helpers/fake_axios'\r\n\r\n\r\nexport type TLoginParams = {\r\n    email: string\r\n    password: string\r\n}\r\n\r\nexport const authAPI = {\r\n    login(payload: TLoginParams) {\r\n        return _axios.post(_BaseURL + 'auth/login', {...payload}).then((res: any) => res.data)\r\n    },\r\n    logout() {\r\n        return _axios.delete(_BaseURL+'auth/me').then((res: any) => res.data)\r\n    },\r\n    authMe(payload: {token: string}) {\r\n        return _axios.post(_BaseURL+'auth/me', payload).then((res: any) => res.data)\r\n    }\r\n}","export function set_cookie(name: string, value: string) {\r\n    const cookie_string = name + '=' + escape(value)\r\n\r\n    document.cookie = cookie_string\r\n}\r\n\r\nexport function delete_cookie(cookie_name: string) {\r\n    const cookie_date = new Date()\r\n    cookie_date.setTime(cookie_date.getTime() - 1)\r\n    document.cookie = cookie_name += '=; expires=' + cookie_date.toUTCString()\r\n}\r\n\r\nexport function get_cookie(cookie_name: string) {\r\n    const results = document.cookie.match('(^|;) ?' + cookie_name + '=([^;]*)(;|$)')\r\n\r\n    if (results)\r\n        return (unescape(results[2]))\r\n    else\r\n        return null\r\n}","import {createAsyncThunk, createSlice, PayloadAction} from '@reduxjs/toolkit'\r\nimport {authAPI, TLoginParams} from '../../n3-api/auth-api'\r\nimport {delete_cookie, set_cookie} from '../../n7-helpers/cookie'\r\nimport {setIsFetching} from '../../n1-app/a1-app/app_reducer'\r\n\r\nexport const login = createAsyncThunk('auth/login', async (payload: TLoginParams, thunkAPI) => {\r\n    thunkAPI.dispatch(setIsFetching({isFetching: true}))\r\n    try {\r\n        const data = await authAPI.login(payload)\r\n        // localStorage.setItem('token', data.token)\r\n        set_cookie('token', data.token)\r\n        thunkAPI.dispatch(setIsFetching({isFetching: false}))\r\n        return data\r\n    } catch (err) {\r\n        thunkAPI.dispatch(setIsFetching({isFetching: false}))\r\n        return thunkAPI.rejectWithValue(err)\r\n    }\r\n})\r\nexport const logout = createAsyncThunk('auth/logout', async (payload, thunkAPI) => {\r\n    thunkAPI.dispatch(setIsFetching({isFetching: true}))\r\n    try {\r\n        const data: any = await authAPI.logout()\r\n        if(data.resultCode === 0) {\r\n            // localStorage.removeItem('token')\r\n            delete_cookie('token')\r\n        }\r\n        thunkAPI.dispatch(setIsFetching({isFetching: false}))\r\n        return data\r\n    } catch (error) {\r\n        thunkAPI.dispatch(setIsFetching({isFetching: false}))\r\n        return thunkAPI.rejectWithValue(error)\r\n    }\r\n})\r\n\r\n\r\nconst initState = {\r\n    isAuth: false,\r\n    userName: null,\r\n    userId: null,\r\n}\r\n\r\nconst slice = createSlice({\r\n    name: 'auth',\r\n    initialState: initState,\r\n    reducers: {\r\n        setIsAuth(state, action: PayloadAction<{isAuth: boolean}>) {\r\n            state.isAuth = action.payload.isAuth\r\n        }\r\n    },\r\n    extraReducers: builder => {\r\n        builder\r\n            .addCase(login.fulfilled, (state, action) => {\r\n                state.userName = action.payload.userName\r\n                state.userId = action.payload.userId\r\n                state.isAuth = !state.isAuth\r\n            })\r\n            .addCase(login.rejected, (state, action: any) => {\r\n                alert(action.payload.message)\r\n            })\r\n            .addCase(logout.fulfilled, (state) => {\r\n                state.isAuth = false\r\n                state.userId = null\r\n                state.userName = null\r\n            })\r\n    }\r\n})\r\n\r\nexport const {setIsAuth} = slice.actions\r\nexport const authReducer = slice.reducer","import {createAsyncThunk, createSlice, PayloadAction} from '@reduxjs/toolkit'\r\nimport {authAPI} from '../../n3-api/auth-api'\r\nimport {setIsAuth} from '../../n6-features/f3-authorization/auth_reducer'\r\nimport {get_cookie} from '../../n7-helpers/cookie'\r\n\r\n\r\nexport const initializeApp = createAsyncThunk('app/initializeApp', async (payload, thunkAPI) => {\r\n    try {\r\n        // const token = localStorage.getItem('token')\r\n        const token = get_cookie('token')\r\n        if(token) {\r\n            thunkAPI.dispatch(setIsFetching({isFetching: true}))\r\n            const data = await authAPI.authMe({token})\r\n            if (data.resultCode === 0) {\r\n                thunkAPI.dispatch(setIsAuth({isAuth: true}))\r\n                thunkAPI.dispatch(setIsFetching({isFetching: false}))\r\n                return {isAppInitialized: true}\r\n            } else {\r\n                thunkAPI.dispatch(setIsFetching({isFetching: false}))\r\n                return {isAppInitialized: true}\r\n            }\r\n        } else {\r\n            thunkAPI.dispatch(setIsFetching({isFetching: false}))\r\n            return {isAppInitialized: true}\r\n        }\r\n    } catch (error) {\r\n        thunkAPI.dispatch(setIsFetching({isFetching: false}))\r\n        return thunkAPI.rejectWithValue(error)\r\n    }\r\n})\r\n\r\nconst initState = {\r\n    isAppInitialized: false,\r\n    isFetching: false,\r\n}\r\n\r\nconst slice = createSlice({\r\n    name: 'app',\r\n    initialState: initState,\r\n    reducers: {\r\n        setIsFetching(state, action: PayloadAction<{isFetching: boolean}>) {\r\n            state.isFetching = action.payload.isFetching\r\n        }\r\n    },\r\n    extraReducers: builder => {\r\n        builder.addCase(initializeApp.fulfilled, (state, action) => {\r\n            state.isAppInitialized = action.payload.isAppInitialized\r\n        })\r\n    }\r\n})\r\n\r\nexport const appReducer = slice.reducer\r\nexport const {setIsFetching} = slice.actions","import {configureStore} from '@reduxjs/toolkit'\r\nimport {combineReducers} from 'redux'\r\nimport {TypedUseSelectorHook, useDispatch, useSelector} from 'react-redux'\r\nimport { appReducer } from '../../n1-app/a1-app/app_reducer'\r\nimport { authReducer } from '../../n6-features/f3-authorization/auth_reducer'\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    app: appReducer\r\n})\r\n\r\nexport const store = configureStore({\r\n    reducer: rootReducer\r\n})\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = typeof store.dispatch\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector","import React from 'react'\r\nimport {useAppDispatch, useAppSelector} from '../../n2-bll/store/store'\r\nimport {Redirect} from 'react-router-dom'\r\nimport { PATH } from '../../n1-app/a2-routes/Routes'\r\nimport {logout} from '../f3-authorization/auth_reducer'\r\nimport s from './News.module.css'\r\n\r\n\r\nexport const News = () => {\r\n\r\n    const isAuth = useAppSelector(state => state.auth.isAuth)\r\n    const dispatch = useAppDispatch()\r\n\r\n    const logoutHandler = () => dispatch(logout())\r\n\r\n\r\n    if(!isAuth) return <Redirect to={PATH.AUTHORIZATION}/>\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <button className={s.btn} onClick={logoutHandler}>Logout</button>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport {useAppDispatch, useAppSelector} from '../../n2-bll/store/store'\r\nimport {useFormik} from 'formik'\r\nimport {TLoginParams} from '../../n3-api/auth-api'\r\nimport {login} from './auth_reducer'\r\nimport {Redirect} from 'react-router-dom'\r\nimport { PATH } from '../../n1-app/a2-routes/Routes'\r\nimport s from './Authorization.module.css'\r\n\r\n\r\nexport const Authorization = () => {\r\n\r\n    const dispatch = useAppDispatch()\r\n    const isAuth = useAppSelector(state => state.auth.isAuth)\r\n\r\n    const formik = useFormik<TLoginParams>({\r\n        initialValues: {\r\n            email: 'test@mail.good',\r\n            password: 'test999',\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(login(values))\r\n        }\r\n    })\r\n\r\n    if(isAuth) return <Redirect to={PATH.NEWS}/>\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={formik.handleSubmit} className={s.wrapper}>\r\n                <input name={'email'}\r\n                       className={s.formItem}\r\n                       placeholder={'Enter your email'}\r\n                       type={'text'}\r\n                       onChange={formik.handleChange}\r\n                       value={formik.values.email}/>\r\n                <input name={'password'}\r\n                       className={s.formItem}\r\n                       placeholder={'Enter your password'}\r\n                       type={'password'}\r\n                       onChange={formik.handleChange}\r\n                       value={formik.values.password}/>\r\n                <button className={s.formItem} type={'submit'}>Sign in</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport {Redirect, Route, Switch} from 'react-router-dom'\r\nimport {News} from '../../n6-features/f1-news/News'\r\nimport {Authorization} from '../../n6-features/f3-authorization/Authorization'\r\n\r\n\r\nexport const PATH = {\r\n    AUTHORIZATION: '/authorization',\r\n    NEWS: '/news',\r\n    NOT_FOUND: '/404'\r\n}\r\n\r\nexport const Routes = () => {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route exact path={'/'} render={() => <Redirect to={PATH.NEWS}/>}/>\r\n                <Route path={PATH.AUTHORIZATION} render={() => <Authorization/>}/>\r\n                <Route path={PATH.NEWS} render={() => <News/>}/>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}","import React, {useEffect} from 'react'\nimport './App.css'\nimport {Routes} from '../a2-routes/Routes'\nimport {HashRouter} from 'react-router-dom'\nimport {useAppDispatch, useAppSelector} from '../../n2-bll/store/store'\nimport {initializeApp} from './app_reducer'\n\nfunction App() {\n    const isAppInitialized = useAppSelector(state => state.app.isAppInitialized)\n    const isFetching = useAppSelector(state => state.app.isFetching)\n    const dispatch = useAppDispatch()\n\n    useEffect(() => {\n        if(!isAppInitialized) dispatch(initializeApp())\n    }, [])\n\n    if(isFetching) return <div className={'preloader'}>Loading...</div>\n    return (\n        <HashRouter>\n            <div className=\"App\">\n                <Routes />\n            </div>\n        </HashRouter>\n    )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './n1-app/a1-app/App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux'\nimport { store } from './n2-bll/store/store';\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}